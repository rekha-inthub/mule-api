# This is a basic workflow to help you get started with Actions

name: Build & Deploy to Sandbox

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "dev" branch
  push:
    branches: [ "dev" ]
  #pull_request:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with: 
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml')}}
          restore-keys: |
            ${{ runner.os }}-maven-

      
      - name: Setup Java JDK
        uses: actions/setup-java@v3.14.1
        with:
          #java-version: 17
          java-version: 17-ea
          distribution: adopt # zulu, temurin, 
    
      - name: Add repo credentials
        uses: s4u/maven-settings-action@v2.4.0
        with:
          servers: |
            [{
             "id": "mule-enterprise",
             "username": "${{ secrets.ANYPOINT_USERNAME }}",
             "password": "${{ secrets.ANYPOINT_PASSWORD }}"
            }]
    
      #- name: Print effective-settings (optional)
      #  run: mvn help:effective-settings
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      
      - name: Stamp artifact file name with commit hash
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2
      
      - name: Upload artifact 
        uses: actions/upload-artifact@master
        with:
            name: artifacts
            path: target/*.jar
      
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:    
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with: 
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml')}}
          restore-keys: |
            ${{ runner.os }}-maven-
    
          
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Deploy to Sandbox
      env:
        ENVIRONMENT: ${{ vars.dev }}
        USERNAME: ${{ secrets.anypoint_username }}
        PASSWORD: ${{ secrets.anypoint_password }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Danypoint.username="$USERNAME" \
         -Danypoint.password="$PASSWORD" \
         -Denv="$ENVIRONMENT" \
         -DskipTests
         
    - name: Notify Slack
      uses: act10ns/slack@v1.2.2
      with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#github-actions-notifications'
      if: always()